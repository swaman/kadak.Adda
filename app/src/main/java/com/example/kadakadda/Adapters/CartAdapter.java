package com.example.kadakadda.Adapters;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.example.kadakadda.Models.CartItem;
import com.example.kadakadda.R;
import com.squareup.picasso.Picasso;

import java.util.ArrayList;

import de.hdodenhof.circleimageview.CircleImageView;

public class CartAdapter extends RecyclerView.Adapter<CartAdapter.CartViewHolder>{
    private ArrayList<CartItem> cart;
    private Context context;
    private CartItemListener cartItemListener;

    //CartActivity will implement CartItemListener, it will be passed as parameter.
    public CartAdapter(ArrayList<CartItem> cart, Context context, CartItemListener cartItemListener) {
        this.cart = cart;
        this.context = context;
        this.cartItemListener = cartItemListener;
    }

    @NonNull
    @Override
    /*
            The global cartItemListener (i.e. CartActivity) will be passed to all
            the CartViewHolders generated by onCreateViewHolder.
     */
    public CartViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = null;
        view = LayoutInflater.from(context).inflate(R.layout.cart_item, parent, false); //// TODO
        return new CartViewHolder(view, cartItemListener);
    }

    @Override
    public void onBindViewHolder(@NonNull CartViewHolder holder, int position) {
        CartItem cartItem = cart.get(position);

        holder.textViewName.setText(cartItem.product.title);
        holder.textViewDelivery.setText(cartItem.deliveryDate);
        holder.textViewQuantity.setText("[" + cartItem.quantity + "]");
        holder.textViewTotalCost.setText("â‚¹ " + (cartItem.totalCost));
        Picasso.get()
                .load(cartItem.product.imgPath)
                .into(holder.imageViewItem);
    }

    @Override
    public int getItemCount() {
        return cart.size();
    }

    public class CartViewHolder extends RecyclerView.ViewHolder{
        TextView textViewName, textViewDelivery, textViewQuantity, textViewTotalCost;
        Button buttonPlus, buttonMinus;
        CircleImageView imageViewItem;
        CartItemListener listener;

        public CartViewHolder(@NonNull View itemView, CartItemListener cartItemListener) {
            super(itemView);
            this.listener = cartItemListener;
            imageViewItem = itemView.findViewById(R.id.imageViewItem);
            textViewName = itemView.findViewById(R.id.textViewImage);
            buttonMinus = itemView.findViewById(R.id.minus);
            textViewQuantity = itemView.findViewById(R.id.textViewQuantity);
            buttonPlus = itemView.findViewById(R.id.plus);
            textViewDelivery = itemView.findViewById(R.id.textViewDelivery);
            textViewTotalCost = itemView.findViewById(R.id.seven_hund);
            buttonPlus.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    listener.onPlusClick(getAdapterPosition());
                }
            });

            buttonMinus.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    listener.onMinusClick(getAdapterPosition());
                }
            });
        }
    }

    /*
        The CartItemListener interface enables the RecyclerView Items to interact with CartActivity.
        On clicking +/- button, CartActivity will be notified of the quantity change.
    */
    public interface CartItemListener{

        //Implementation of onPlusClick will change the quantity by using itemPosition index in
        //        original ArrayList<CartItem>, as well as notify the RecyclerView about Data Change.
        void onPlusClick(int itemPosition);

        //onMinusClick will be similar to onPlusClick, except with an added non-negative security
        //          for the quantity.
        void onMinusClick(int itemPosition);
    }
}
